-- # ALIASES
local g = vim.g
local o = vim.opt
local exec = vim.api.nvim_exec

local options = {
  splitbelow = true,                       -- force all horizontal splits to go below current window
  splitright = true,                       -- force all vertical splits to go to the right of current window
  showcmd = true,                          -- Show leader key
  expandtab = true,                        -- convert tabs to spaces
  tabstop = 2,                             -- insert 2 spaces for a tab
  shiftwidth = 2,                          -- the number of spaces inserted for each indentation
  softtabstop = 2,                         -- number of spaces that a tab counts for while editing
  number = true,                           -- set numbered lines
  relativenumber = true,                   -- set relative numbered lines
  numberwidth = 4,                         -- set number column width to 2 {default 4}
  signcolumn = "yes",                      -- always show the sign column, otherwise it would shift the text each time
  path = o.path + '**',                    -- Search all subfolders
  termguicolors = true,                    -- enable 24-bit TUI colours
  wildmenu = true,                         -- Display matching files on tab complete
  wildignore = o.wildignore + '**/node_modules/**,**/dist/**,**_site/**,*.swp,*.png,*.jpg,*.gif,*.webp,*webm,*.ogg,*.dng,*.jpeg,*.map,*.woff*', -- Ignore node_modules and images from search results
  nrformats = '',                          -- Treat all numbers as decimal regardless of whether they are padded with zeros
  ignorecase = true,                       -- needed for smartcase to work
  smartcase = true,                        -- make searches case insensitive except if uppercase charater is present
  smartindent = true,                      -- make indenting smarter again
  updatetime = 100,                        -- faster completion (4000ms default)
  scrolloff = 8,                           -- keep at least 8 lines above & below the cursor (default 0)
  sidescrolloff = 8,                       -- keep at least 8 columns to left and right of cursor if nowrap is set
  showmode = false,                        -- we don't need to see things like -- INSERT -- anymore
  mouse = "a",                             -- allow the mouse to be used in neovim
  completeopt = { "menuone", "noselect" }, -- mostly just for cmp
  pumheight = 10,                          -- pop up menu height
  cursorline = true,                       -- highlight the current line
}

o.shortmess:append "c"                     -- don't give ins-completion-menu messages

for k, v in pairs(options) do
  o[k] = v
end

vim.cmd "set whichwrap+=<,>,[,],h,l"       -- allow h/l move lines when cursor is on first/last cursor
vim.cmd [[set iskeyword+=-]]               -- include dash in words

-- set shell
{{ if eq .chezmoi.arch "arm64" -}}
o.shell = '/opt/homebrew/bin/fish'
g['$SHELL'] = '/opt/homebrew/bin/fish'
{{ else -}}
o.shell = '/usr/local/bin/fish'
g['$SHELL'] = '/usr/local/bin/fish'
{{ end -}}

-- Disable python2 provider
g.loaded_python_provider = 0
g.python_host_prog = ''

-- Disable ruby provider
g.loaded_ruby_provider = 0
g.ruby_host_prog = ''

-- Disable perl provider
g.loaded_perl_provider = 0
g.perl_host_prog = ''

-- GitHub Enterprise configurations
g.github_enterprise_urls = {'https://github.{{ .work.domain }}', 'git@github.{{ .work.domain }}'}

-- Templates
-- Prefill new files created by vim with contents from the following templates
--   https://shapeshed.com/vim-templates/
--   https://github.com/IllyaStarikov/skeleton-files
exec([[
augroup templates
  autocmd BufNewFile *.* silent! execute '0r ~/.config/nvim/templates/skeleton.'.expand("<afile>:e")
  autocmd BufNewFile * %substitute#\[:VIM_EVAL:\]\(.\{-\}\)\[:END_EVAL:\]#\=eval(submatch(1))#ge
augroup END
]], false)

-- Strip trailing whitespace from all files
-- exec([[
-- autocmd BufWritePre * %s/\s\+$//e
-- autocmd BufWritePre * %s/\s\+$//e
-- autocmd BufWritePre * %s/\s\+$//e
-- ]], false)

-- Toggle relative number mode
exec([[
:augroup numbertoggle
:  autocmd!
:  autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
:  autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
:augroup END
]], false)

-- Convenience wrapper around Messages capture
Msg = function(...)
  require('messages.api').capture_thing(...)
end

-- open file at the last position it was edited earlier
vim.api.nvim_create_autocmd("BufReadPost", {
    callback = function()
        local mark = vim.api.nvim_buf_get_mark(0, '"')
        if mark[1] > 1 and mark[1] <= vim.api.nvim_buf_line_count(0) then
            vim.api.nvim_win_set_cursor(0, mark)
        end
    end,
})

-- REFERENCES
-- https://github.com/ayoisaiah/dotfiles/blob/master/private_dot_config/nvim/lua/settings.lua
-- https://github.com/airblade/vim-gitgutter#when-are-the-signs-updated
-- https://github.com/LunarVim/Neovim-from-scratch
