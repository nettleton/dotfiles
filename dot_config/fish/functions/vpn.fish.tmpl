function vpn
  set PIDFILE $HOME/.openconnect_pid

  set EXISTING_PID ""
  set CMD_AT_PID ""

  if test -e "$PIDFILE"
    set EXISTING_PID (bat -p $HOME/.openconnect_pid)
    set CMD_AT_PID (ps -p $EXISTING_PID -o command | sed -n '2p' | cut -f1 -d' ')
  end

  test "$CMD_AT_PID" = "openconnect"; and set CONNECTION_STATUS "connected"; or set CONNECTION_STATUS "disconnected"

  switch $argv[1]
    case status
      echo "$CONNECTION_STATUS"
    case connect
      if test "$CONNECTION_STATUS" = "disconnected"
        if test -n "$argv[2]"
          set VPN_HOST "$argv[2]"
        else
          set VPN_HOST "zakim.{{ .work.domain }}"
        end

        # Useragent is important, if it doesn't start with AnyConnect it falls back to legacy post mechanisms and can't seem to send the TOTP
        # Related/helpful issues:
        #    - https://gitlab.com/openconnect/openconnect/-/issues/489 (got the useragent trick)
        #    - https://gitlab.com/openconnect/openconnect/-/merge_requests/409 (tried the form-entry arg but that did not work)
        #    - https://gitlab.com/openconnect/openconnect/-/issues/270 (echo | cat - /dev/tty | sudo openconnect ... works around errors when specifying both --passwd-on-stdin and totp)
        echo (op item get {{ .work.companyname }} --fields password --reveal) | /bin/cat - /dev/stdin | sudo -A openconnect --user {{ .work.user }} --setuid (id -u) -b --pid-file "$PIDFILE" --authgroup MFA --token-mode totp --token-secret sha1:base32:(op item get {{ .work.companyname }} --fields OTP --reveal | pcregrep -o1 'secret=(.*)&issuer') --useragent 'AnyConnect' --passwd-on-stdin "$VPN_HOST" &
      else
        echo "already connected, disconnect first"
      end
    case disconnect
      if test "$CONNECTION_STATUS" = "connected"
        kill -9 $EXISTING_PID
      else
        echo "openconnect not running, doing nothing"
      end
    case '*'
      echo "Unrecognized option $argv[1]"
  end
end
